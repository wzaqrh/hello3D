#ifndef SKELETON_H
#define SKELETON_H
#include "GLSLSupport.glinc"
#include "Macros.glinc"

#define MIR_DECLARE_VS_IN_Skin(name, slot) \
	layout(location = slot + 0) in float3 name##Normal;\
	layout(location = slot + 1) in float4 name##Tangent;\
	layout(location = slot + 2) in float3 name##BiTangent;\
	layout(location = slot + 3) in float4 name##BlendWeights;\
	layout(location = slot + 4) in uint4  name##BlendIndices;

#define MAX_MATRICES 56
layout (binding = 2, std140) uniform cbWeightedSkin 
{
	matrix Model;
	matrix Models[MAX_MATRICES];
};

float4 Skinning(float4 iBlendWeights, uint4 iBlendIndices, float4 iPos)
{
    float4 Pos = float4(0.0,0.0,0.0,1.0); 	
	Pos.xyz += (Models[iBlendIndices.x] * iPos).xyz * iBlendWeights.x;
	Pos.xyz += (Models[iBlendIndices.y] * iPos).xyz * iBlendWeights.y;
	Pos.xyz += (Models[iBlendIndices.z] * iPos).xyz * iBlendWeights.z;
	Pos.xyz += (Models[iBlendIndices.w] * iPos).xyz * iBlendWeights.w;
	Pos.xyz += iPos.xyz * max(0.0, 1.0 - dot(iBlendWeights, float4(1.0, 1.0, 1.0, 1.0)));
	return Pos;
}
#endif